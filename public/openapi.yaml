openapi: 3.1.0
info:
  title: Sleeper Draft MCP Actions API
  description: |
    REST shim for the Sleeper Draft MCP server. Simplified endpoints for player data: ADP rankings, trending players, and comprehensive player statistics with pagination. Designed for OpenAI Actions or any HTTP client.
  version: 1.0.0
  contact:
    name: API Support
    url: https://www.sleeperdraft.com
    email: support@sleeperdraft.com

servers:
  - url: https://www.sleeperdraft.com/api
    description: Production server


paths:
  # Individual tool endpoints for better GPT Actions compatibility
  /mcp/tools/fetch-trending-players:
    post:
      summary: Fetch trending players
      description: |
        Get trending players by adds or drops in the last 24 hours. Results are ordered by trending value descending.
      operationId: fetchTrendingPlayers
      tags:
        - Player Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchTrendingPlayersRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchTrendingPlayersResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

  /mcp/tools/fetch-adp-players:
    post:
      summary: Fetch players by ADP
      description: |
        Get top players by Average Draft Position (ADP). Results are ordered by ADP ascending (lower ADP first).
      operationId: fetchADPPlayers
      tags:
        - Player Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchADPPlayersRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchADPPlayersResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'


  /mcp/tools/fetch-players-season-data:
    post:
      summary: Fetch players season data
      description: |
        Returns players with last season stats + summary and current season projections + summary. Optional position filter and pagination.
      operationId: fetchPlayersSeasonData
      tags:
        - Player Data
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchPlayersSeasonDataRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchPlayersSeasonDataResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

  /mcp/tools/fetch-player-season-data:
    post:
      summary: Fetch a player's season data
      description: |
        Returns last season stats + summary and current season projections + summary for a specific player by player_id or by name. If name matches multiple, all matches are returned.
      operationId: fetchPlayerSeasonData
      tags:
        - Player Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchPlayerSeasonDataRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchPlayerSeasonDataResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

  /mcp/tools/fetch-league:
    post:
      summary: Fetch league details and users
      description: |
        Get League tool fetches all leagues for a user and returns one league based on the name or ID. It also fetches all users in the league and returns user information with username, display name, and team names.
      operationId: fetchLeague
      tags:
        - League Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchLeagueRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchLeagueResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

  /mcp/tools/fetch-matchups:
    post:
      summary: Fetch league matchups
      description: |
        Fetch matchups for a league and week, returning raw matchup data supplemented with basic user info. Entries that share the same `matchup_id` are opponents in the same head-to-head matchup.
      operationId: fetchMatchups
      tags:
        - League Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchMatchupsRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchMatchupsResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

  /mcp/tools/fetch-roster:
    post:
      summary: Fetch user roster
      description: |
        Gets a specific roster for a user in a league. Returns roster data with player information from the database and owner details.
      operationId: fetchRoster
      tags:
        - League Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchRosterRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchRosterResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

  /mcp/tools/fetch-user-leagues:
    post:
      summary: Fetch user leagues
      description: |
        Fetches all leagues for a user by username or user ID. Returns league IDs and names for the specified sport and season.
      operationId: fetchUserLeagues
      tags:
        - League Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchUserLeaguesRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchUserLeaguesResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'




components:
  schemas:
    # Generic MCP Tool Request Schema
    McpToolRequest:
      type: object
      description: Generic request schema for MCP tool invocations
      properties: {}
      additionalProperties: true
      example:
        type: "add"

    # Generic MCP Tool Response Schema
    McpToolResponse:
      type: object
      description: Generic response schema for MCP tool results
      additionalProperties: true
      properties:
        success:
          type: boolean
          example: true
        data:
          description: Tool-specific response data (array or object)
        count:
          type: integer
          example: 25
        message:
          type: string
          example: "Successfully executed tool"
        metadata:
          type: object
          additionalProperties: true
      required:
        - success

    # Request Schemas
    FetchTrendingPlayersRequest:
      type: object
      properties:
        type:
          type: string
          enum: [add, drop]
          description: The type of trending data to fetch
          example: "add"
      required:
        - type

    FetchADPPlayersRequest:
      type: object
      properties:
        position:
          type: string
          description: Optional filter to get players for a specific position (e.g., "QB", "RB", "WR", "TE")
          example: "QB"




    FetchPlayersSeasonDataRequest:
      type: object
      properties:
        position:
          type: string
          description: Optional position filter (QB, RB, WR, TE, K, DEF)
          example: QB
        limit:
          type: integer
          minimum: 1
          maximum: 1000
          description: Optional limit of players to return (default 10)
          example: 10
        offset:
          type: integer
          minimum: 0
          description: Optional offset for pagination
          example: 0
        cursor:
          type: string
          description: Opaque cursor for pagination per MCP spec. If provided, overrides offset/limit.

    FetchPlayerSeasonDataRequest:
      type: object
      properties:
        player_id:
          type: string
          description: Sleeper player ID
          example: "1234"
        name:
          type: string
          description: Player name to search (case-insensitive, partial match)
          example: "Mahomes"
      anyOf:
        - required: [player_id]
        - required: [name]

    FetchLeagueRequest:
      type: object
      properties:
        user_id:
          type: string
          description: Sleeper user ID to fetch leagues for
          example: "123456789"
        league_identifier:
          type: string
          description: League name or league ID to find and return
          example: "My Fantasy League"
        sport:
          type: string
          description: Sport type (default: nfl)
          default: nfl
          example: "nfl"
        season:
          type: string
          description: Season year (default: current season)
          example: "2024"
      required:
        - user_id
        - league_identifier

    FetchMatchupsRequest:
      type: object
      properties:
        league_id:
          type: string
          description: Sleeper league ID to fetch matchups for
          example: "987654321"
        week:
          oneOf:
            - type: integer
              minimum: 1
              maximum: 18
              description: Week number to fetch matchups for
              example: 5
            - type: "null"
              description: Defaults to current week
        sport:
          type: string
          description: Sport type (default: nfl)
          default: nfl
          example: "nfl"
      required:
        - league_id

    FetchRosterRequest:
      type: object
      properties:
        league_id:
          type: string
          description: Sleeper league ID
          example: "987654321"
        user_id:
          type: string
          description: Sleeper user ID whose roster to fetch
          example: "123456789"
        include_player_details:
          type: boolean
          description: Whether to include detailed player information from database (default: true)
          default: true
          example: true
        include_owner_details:
          type: boolean
          description: Whether to include owner/user details from Sleeper API (default: true)
          default: true
          example: true
      required:
        - league_id
        - user_id

    FetchUserLeaguesRequest:
      type: object
      properties:
        user_identifier:
          type: string
          description: Sleeper username or user ID to fetch leagues for
          example: "fantasyfan123"
        sport:
          type: string
          description: Sport type (default: nfl)
          default: nfl
          example: "nfl"
        season:
          type: string
          description: Season year (default: current season)
          example: "2024"
      required:
        - user_identifier

    # Response Schemas
    FetchTrendingPlayersResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Player'
        count:
          type: integer
          example: 25
        message:
          type: string
          example: "Successfully fetched 25 trending players for type 'add'"
        metadata:
          type: object
          properties:
            type:
              type: string
              example: "add"
            column:
              type: string
              example: "adds_24h"
            executed_at:
              type: string
              format: date-time

    FetchADPPlayersResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Player'
        count:
          type: integer
          example: 50
        message:
          type: string
          example: "Successfully fetched 50 players by ADP for all positions"
        metadata:
          type: object
          properties:
            position_filter:
              type: string
              nullable: true
              example: "QB"
            order_by:
              type: string
              example: "adp"
            order_direction:
              type: string
              example: "asc"
            executed_at:
              type: string
              format: date-time





    PlayerSeasonSummary:
      type: object
      properties:
        total_points:
          type: number
          example: 250.5
        min_points:
          type: number
          example: 2.1
        max_points:
          type: number
          example: 42.3
        average_points_per_game:
          type: number
          example: 15.6
        stddev_below:
          type: number
          example: 12.2
        stddev_above:
          type: number
          example: 19.0
        games:
          type: integer
          nullable: true
          example: 17
        games_active:
          type: integer
          nullable: true
          example: 16
    PlayerWithSeasonSummaries:
      allOf:
        - $ref: '#/components/schemas/Player'
        - type: object
          properties:
            full_name:
              type: string
              example: "Patrick Mahomes"
            bye_week:
              type: integer
              example: 10
            times_drafted:
              type: integer
              example: 1200
            season_2024_summary:
              $ref: '#/components/schemas/PlayerSeasonSummary'
            season_2025_projection_summary:
              $ref: '#/components/schemas/PlayerSeasonSummary'
    FetchPlayersSeasonDataResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        operation:
          type: string
          example: fetch-players-season-data
        count:
          type: integer
          example: 250
        players:
          type: array
          items:
            $ref: '#/components/schemas/PlayerWithSeasonSummaries'
        nextCursor:
          type: string
          nullable: true
          description: Opaque cursor to fetch the next page. When absent, there are no more results.
        metadata:
          type: object
          properties:
            filters:
              type: object
              properties:
                position:
                  type: string
                  nullable: true
            pagination:
              type: object
              properties:
                limit:
                  type: integer
                offset:
                  type: integer
                mode:
                  type: string
                  example: cursor
            seasons:
              type: object
              properties:
                stats:
                  type: integer
                  example: 2024
                projections:
                  type: integer
                  example: 2025
            executed_at:
              type: string
              format: date-time

    FetchPlayerSeasonDataResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        operation:
          type: string
          example: fetch-player-season-data
        mode:
          type: string
          enum: [by_id, by_name]
          example: by_id
        count:
          type: integer
          example: 1
        players:
          type: array
          items:
            $ref: '#/components/schemas/PlayerWithSeasonSummaries'
        metadata:
          type: object
          properties:
            filters:
              type: object
              properties:
                player_id:
                  type: string
                  nullable: true
                name:
                  type: string
                  nullable: true
            seasons:
              type: object
              properties:
                stats:
                  type: integer
                  example: 2024
                projections:
                  type: integer
                  example: 2025
            executed_at:
              type: string
              format: date-time

    FetchLeagueResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        league:
          type: object
          description: League details from Sleeper API
          additionalProperties: true
        users:
          type: array
          items:
            type: object
            properties:
              user_id:
                type: string
                example: "123456789"
              username:
                type: string
                nullable: true
                example: "fantasyfan"
              display_name:
                type: string
                nullable: true
                example: "Fantasy Fan"
              team_name:
                type: string
                example: "Dream Team"
              wins:
                type: integer
                example: 8
              losses:
                type: integer
                example: 6
              fpts:
                type: number
                example: 1456.78
        message:
          type: string
          example: "Successfully fetched league details and users"
        metadata:
          type: object
          properties:
            user_id:
              type: string
              example: "123456789"
            league_identifier:
              type: string
              example: "My Fantasy League"
            sport:
              type: string
              example: "nfl"
            season:
              type: string
              example: "2024"
            executed_at:
              type: string
              format: date-time

    FetchMatchupsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        league_id:
          type: string
          example: "987654321"
        week:
          type: integer
          example: 5
        matchups:
          type: array
          items:
            type: object
            properties:
              matchup_id:
                type: integer
                example: 1
              teams:
                type: array
                items:
                  type: object
                  properties:
                    points:
                      type: number
                      nullable: true
                      example: 125.6
                    custom_points:
                      type: number
                      nullable: true
                      example: 120.0
                    user:
                      type: object
                      nullable: true
                      properties:
                        user_id:
                          type: string
                          example: "123456789"
                        username:
                          type: string
                          nullable: true
                          example: "fantasyfan"
                        display_name:
                          type: string
                          nullable: true
                          example: "Fantasy Fan"
                        team_name:
                          type: string
                          example: "Dream Team"
                        avatar:
                          type: string
                          nullable: true
                          example: "https://sleepercdn.com/avatars/123456789"
        count:
          type: integer
          example: 6
        message:
          type: string
          example: "Successfully fetched 6 matchups for week 5"
        metadata:
          type: object
          properties:
            sport:
              type: string
              example: "nfl"
            executed_at:
              type: string
              format: date-time

    FetchRosterResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        operation:
          type: string
          example: get-roster
        formattedOutput:
          type: string
          example: "Successfully fetched roster for user 123456789 in league 987654321"
        data:
          type: object
          description: Roster data with enhanced player details
          additionalProperties: true
          properties:
            roster_id:
              type: integer
              example: 1
            owner_id:
              type: string
              example: "123456789"
            starters:
              type: array
              items:
                type: string
              example: ["1234", "5678"]
            bench:
              type: array
              items:
                type: string
              example: ["9012", "3456"]
            players:
              type: array
              items:
                type: string
              example: ["1234", "5678", "9012", "3456"]
            starters_detailed:
              type: array
              items:
                type: object
                properties:
                  player_id:
                    type: string
                    example: "1234"
                  player_data:
                    $ref: '#/components/schemas/Player'
            bench_detailed:
              type: array
              items:
                type: object
                properties:
                  player_id:
                    type: string
                    example: "5678"
                  player_data:
                    $ref: '#/components/schemas/Player'
            owner:
              type: object
              properties:
                user_id:
                  type: string
                  example: "123456789"
                username:
                  type: string
                  nullable: true
                  example: "fantasyfan"
                display_name:
                  type: string
                  nullable: true
                  example: "Fantasy Fan"
                avatar:
                  type: string
                  nullable: true
                  example: "https://sleepercdn.com/avatars/123456789"
                team_name:
                  type: string
                  example: "Dream Team"
        metadata:
          type: object
          properties:
            league_id:
              type: string
              example: "987654321"
            user_id:
              type: string
              example: "123456789"
            include_player_details:
              type: boolean
              example: true
            include_owner_details:
              type: boolean
              example: true
            executed_at:
              type: string
              format: date-time

    FetchUserLeaguesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: League ID
                example: "987654321"
              name:
                type: string
                description: League name
                example: "My Fantasy League"
        count:
          type: integer
          example: 3
        message:
          type: string
          example: "Successfully fetched 3 leagues for user 'fantasyfan123'"
        metadata:
          type: object
          properties:
            user_identifier:
              type: string
              example: "fantasyfan123"
            resolved_user_id:
              type: string
              example: "123456789"
            sport:
              type: string
              example: "nfl"
            season:
              type: string
              example: "2024"
            executed_at:
              type: string
              format: date-time
    Player:
      type: object
      properties:
        id:
          type: integer
          description: Player database ID
          example: 12345
        player_id:
          type: string
          description: Sleeper player ID
          example: "1234"
        name:
          type: string
          description: Player full name
          example: "Patrick Mahomes"
        position:
          type: string
          description: Player position
          example: "QB"
        team:
          type: string
          description: Player team
          example: "KC"
        age:
          type: integer
          description: Player age
          example: 28
        adp:
          type: number
          description: Average Draft Position
          example: 5.2
        adp_formatted:
          type: string
          description: ADP in round.pick format
          example: "1.05"
        adds_24h:
          type: integer
          description: Players added in last 24 hours
          example: 1250
        drops_24h:
          type: integer
          description: Players dropped in last 24 hours
          example: 450


  responses:
    ValidationError:
      description: Validation error in request parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Tool execution failed"
              message:
                type: string
                example: "Validation failed: The user_id field is required"
              mcp_error:
                type: object
                properties:
                  code:
                    type: integer
                    example: -32602
                  message:
                    type: string
                    example: "Invalid params"

    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal server error"
              message:
                type: string
                example: "An unexpected error occurred while processing the request"

tags:
  - name: Player Data
    description: Player statistics, rankings, trending data, and ADP analysis
  - name: League Data
    description: League information, user rosters, matchups, and league management
