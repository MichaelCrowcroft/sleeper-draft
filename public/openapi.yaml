openapi: 3.1.0
info:
  title: Sleeper Draft MCP Actions API
  description: |
    REST shim for the Sleeper Draft MCP server. Endpoints proxy MCP tools to fetch data from Sleeper and the local database. Designed for OpenAI Actions or any HTTP client. Descriptions are concise (<300 chars) and reflect current MCP tools.
  version: 1.0.0
  contact:
    name: API Support
    url: https://www.sleeperdraft.com
    email: support@sleeperdraft.com

servers:
  - url: https://www.sleeperdraft.com/api
    description: Production server


paths:
  # Individual tool endpoints for better GPT Actions compatibility
  /mcp/tools/fetch-trending-players:
    post:
      summary: Fetch trending players
      description: |
        Get trending players by adds or drops in the last 24 hours. Results are ordered by trending value descending.
      operationId: fetchTrendingPlayers
      tags:
        - Player Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchTrendingPlayersRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchTrendingPlayersResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

  /mcp/tools/fetch-adp-players:
    post:
      summary: Fetch players by ADP
      description: |
        Get top players by Average Draft Position (ADP). Results are ordered by ADP ascending (lower ADP first).
      operationId: fetchADPPlayers
      tags:
        - Player Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchADPPlayersRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchADPPlayersResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

  /mcp/tools/fetch-user-leagues:
    post:
      summary: Fetch user leagues
      description: |
        Get leagues for a Sleeper user (by username or user ID) for a given sport and season.
      operationId: fetchUserLeagues
      tags:
        - League Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchUserLeaguesRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchUserLeaguesResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

  /mcp/tools/draft-picks:
    post:
      summary: Get draft pick recommendations
      description: |
        Generate draft pick suggestions using draft state, roster needs, and ADP. Snake draft mechanics and positional needs are considered.
      operationId: getDraftPicks
      tags:
        - Draft Strategy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftPicksRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftPicksResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

  /mcp/tools/fetch-league:
    post:
      summary: Fetch league details
      description: |
        Get a specific league for a user by league ID or name, plus users with team summaries.
      operationId: fetchLeague
      tags:
        - League Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchLeagueRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchLeagueResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

  /mcp/tools/fetch-roster:
    post:
      summary: Fetch a user roster
      description: |
        Get a specific user's roster in a league, optionally enriched with player and owner details.
      operationId: fetchRoster
      tags:
        - Roster Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchRosterRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchRosterResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

  /mcp/tools/fetch-matchups:
    post:
      summary: Fetch league matchups
      description: |
        Get matchups for a league and week, paired by matchup_id with basic user info.
      operationId: fetchMatchups
      tags:
        - Matchup Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchMatchupsRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchMatchupsResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'

  /mcp/tools/fetch-transactions:
    post:
      summary: Fetch league transactions
      description: |
        Get transactions for a league (filtered by round and roster if provided), with expanded player details.
      operationId: fetchTransactions
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchTransactionsRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchTransactionsResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'



components:
  schemas:
    # Generic MCP Tool Request Schema
    McpToolRequest:
      type: object
      description: Generic request schema for MCP tool invocations
      properties: {}
      additionalProperties: true
      example:
        type: "add"

    # Generic MCP Tool Response Schema
    McpToolResponse:
      type: object
      description: Generic response schema for MCP tool results
      additionalProperties: true
      properties:
        success:
          type: boolean
          example: true
        data:
          description: Tool-specific response data (array or object)
        count:
          type: integer
          example: 25
        message:
          type: string
          example: "Successfully executed tool"
        metadata:
          type: object
          additionalProperties: true
      required:
        - success

    # Request Schemas
    FetchTrendingPlayersRequest:
      type: object
      properties:
        type:
          type: string
          enum: [add, drop]
          description: The type of trending data to fetch
          example: "add"
      required:
        - type

    FetchADPPlayersRequest:
      type: object
      properties:
        position:
          type: string
          description: Optional filter to get players for a specific position (e.g., "QB", "RB", "WR", "TE")
          example: "QB"

    FetchUserLeaguesRequest:
      type: object
      properties:
        user_identifier:
          type: string
          description: Sleeper username or user ID to fetch leagues for
          example: "johndoe123"
        sport:
          type: string
          description: Sport type
          default: "nfl"
          example: "nfl"
        season:
          type: string
          description: Season year
          example: "2024"
      required:
        - user_identifier

    DraftPicksRequest:
      type: object
      properties:
        user_id:
          type: string
          description: Sleeper user ID
          example: "123456789"
        draft_id:
          type: string
          description: Sleeper draft ID
          example: "987654321"
        limit:
          type: integer
          description: Maximum number of suggestions to return
          minimum: 1
          maximum: 50
          default: 10
          example: 15
      required:
        - user_id
        - draft_id

    FetchLeagueRequest:
      type: object
      properties:
        user_id:
          type: string
          description: Sleeper user ID to fetch leagues for
          example: "123456789"
        league_identifier:
          type: string
          description: League name or league ID to find and return
          example: "My Fantasy League"
        sport:
          type: string
          description: Sport type
          default: "nfl"
          example: "nfl"
        season:
          type: string
          description: Season year
          example: "2024"
      required:
        - user_id
        - league_identifier

    FetchRosterRequest:
      type: object
      properties:
        league_id:
          type: string
          description: Sleeper league ID to fetch rosters for
          example: "987654321"
        include_player_details:
          type: boolean
          description: Whether to include detailed player information from database
          default: true
          example: true
        include_owner_details:
          type: boolean
          description: Whether to include owner/user details from Sleeper API
          default: true
          example: true
      required:
        - league_id

    FetchMatchupsRequest:
      type: object
      properties:
        league_id:
          type: string
          description: Sleeper league ID to fetch matchups for
          example: "987654321"
        week:
          anyOf:
            - type: integer
              minimum: 1
              maximum: 18
            - type: 'null'
          description: Week number to fetch matchups for (defaults to current week)
        sport:
          type: string
          description: Sport type
          default: "nfl"
          example: "nfl"
      required:
        - league_id

    # Response Schemas
    FetchTrendingPlayersResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Player'
        count:
          type: integer
          example: 25
        message:
          type: string
          example: "Successfully fetched 25 trending players for type 'add'"
        metadata:
          type: object
          properties:
            type:
              type: string
              example: "add"
            column:
              type: string
              example: "adds_24h"
            executed_at:
              type: string
              format: date-time

    FetchADPPlayersResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Player'
        count:
          type: integer
          example: 50
        message:
          type: string
          example: "Successfully fetched 50 players by ADP for all positions"
        metadata:
          type: object
          properties:
            position_filter:
              type: string
              nullable: true
              example: "QB"
            order_by:
              type: string
              example: "adp"
            order_direction:
              type: string
              example: "asc"
            executed_at:
              type: string
              format: date-time

    FetchUserLeaguesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "987654321"
              name:
                type: string
                example: "Championship League"
        count:
          type: integer
          example: 3
        message:
          type: string
          example: "Successfully fetched 3 leagues for user 'fantasyexpert'"
        metadata:
          type: object
          properties:
            user_identifier:
              type: string
              example: "fantasyexpert"
            sport:
              type: string
              example: "nfl"
            season:
              type: string
              example: "2024"
            executed_at:
              type: string
              format: date-time

    DraftPicksResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            suggestions:
              type: array
              items:
                type: object
                properties:
                  player:
                    $ref: '#/components/schemas/Player'
                  recommendation_reason:
                    type: string
                  positional_need:
                    type: object
                    nullable: true
            draft_analysis:
              type: object
              additionalProperties: true
            roster_composition:
              type: object
              additionalProperties: true
            positional_needs:
              type: object
              additionalProperties: true
        metadata:
          type: object
          additionalProperties: true
        adp_guide:
          type: object
          additionalProperties: true

    FetchLeagueResponse:
      type: object
      properties:
        league:
          type: object
          description: Raw league object from Sleeper
          additionalProperties: true
        users:
          type: array
          description: Users with team summaries
          items:
            $ref: '#/components/schemas/LeagueUserSummary'

    FetchRosterResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        operation:
          type: string
          example: get-roster
        formattedOutput:
          type: string
          example: "Successfully fetched roster for user 123456789 in league 987654321"
        data:
          $ref: '#/components/schemas/RosterEnhanced'
        metadata:
          type: object
          additionalProperties: true

    FetchMatchupsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Matchup'
        count:
          type: integer
          example: 6
        message:
          type: string
          example: "Successfully fetched 6 matchups for league '987654321' week 5"
        metadata:
          type: object
          properties:
            league_id:
              type: string
              example: "987654321"
            week:
              type: integer
              example: 5
            user_filter:
              type: string
              nullable: true
              example: "123456789"
            sport:
              type: string
              example: "nfl"
            executed_at:
              type: string
              format: date-time

    FetchTransactionsRequest:
      type: object
      properties:
        league_id:
          type: string
          description: Sleeper league ID to fetch transactions for
          example: "987654321"
        round:
          type: integer
          description: Week/round to fetch transactions for
          example: 1
        roster_id:
          type: integer
          nullable: true
          description: Optional roster ID to filter results
          example: 2
      required:
        - league_id

    TradeAddedPlayer:
      type: object
      properties:
        player_id:
          type: string
          example: "p1"
        to_roster_id:
          type: integer
          example: 2
        player:
          $ref: '#/components/schemas/Player'

    TradeDroppedPlayer:
      type: object
      properties:
        player_id:
          type: string
          example: "p1"
        from_roster_id:
          type: integer
          example: 1
        player:
          $ref: '#/components/schemas/Player'

    TradeDetails:
      type: object
      properties:
        transaction_id:
          type: string
          example: "1234567890"
        status:
          type: string
          example: pending
        roster_ids:
          type: array
          items:
            type: integer
        adds:
          type: array
          items:
            $ref: '#/components/schemas/TradeAddedPlayer'
        drops:
          type: array
          items:
            $ref: '#/components/schemas/TradeDroppedPlayer'
        draft_picks:
          type: array
          items:
            type: object
            additionalProperties: true
        waiver_budget:
          type: array
          items:
            type: object
            additionalProperties: true

    FetchTransactionsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/TradeDetails'
        count:
          type: integer
          example: 1
        metadata:
          type: object
          properties:
            league_id:
              type: string
              example: "987654321"
            round:
              type: integer
              example: 1
            filtered_roster_id:
              type: integer
              nullable: true
              example: 2
            pending_only:
              type: boolean
              example: false
            executed_at:
              type: string
              format: date-time
    Player:
      type: object
      properties:
        id:
          type: integer
          description: Player database ID
          example: 12345
        player_id:
          type: string
          description: Sleeper player ID
          example: "1234"
        name:
          type: string
          description: Player full name
          example: "Patrick Mahomes"
        position:
          type: string
          description: Player position
          example: "QB"
        team:
          type: string
          description: Player team
          example: "KC"
        age:
          type: integer
          description: Player age
          example: 28
        adp:
          type: number
          description: Average Draft Position
          example: 5.2
        adp_formatted:
          type: string
          description: ADP in round.pick format
          example: "1.05"
        adds_24h:
          type: integer
          description: Players added in last 24 hours
          example: 1250
        drops_24h:
          type: integer
          description: Players dropped in last 24 hours
          example: 450

    League:
      type: object
      properties:
        league_id:
          type: string
          description: Sleeper league ID
          example: "987654321"
        name:
          type: string
          description: League name
          example: "Championship League"
        season:
          type: string
          description: Season year
          example: "2024"
        sport:
          type: string
          description: Sport type
          example: "nfl"
        total_rosters:
          type: integer
          description: Total number of teams
          example: 12
        status:
          type: string
          description: League status
          example: "in_season"

    LeagueUserSummary:
      type: object
      properties:
        user_id:
          type: string
          example: "123456789"
        username:
          type: string
          example: "fantasyexpert"
        display_name:
          type: string
          example: "Fantasy Expert"
        team_name:
          type: string
          example: "Expert's Eagles"
        wins:
          type: integer
          example: 8
        losses:
          type: integer
          example: 4
        fpts:
          type: number
          example: 1450.5

    DraftRecommendation:
      type: object
      properties:
        player_id:
          type: string
          description: Sleeper player ID
          example: "1234"
        name:
          type: string
          description: Player name
          example: "Patrick Mahomes"
        position:
          type: string
          description: Player position
          example: "QB"
        adp:
          type: number
          description: Average Draft Position
          example: 5.2
        adp_formatted:
          type: string
          description: ADP in round.pick format
          example: "1.05"
        recommendation_score:
          type: number
          description: Recommendation score (higher is better)
          example: 95.5
        reasoning:
          type: string
          description: Explanation for the recommendation
          example: "Elite QB with consistent performance and favorable ADP"

    Roster:
      type: object
      description: Raw roster object from Sleeper
      properties: {}
      additionalProperties: true
    RosterEnhanced:
      type: object
      properties:
        roster_id:
          type: integer
          description: Roster ID
          example: 1
        owner_id:
          type: string
          description: Owner user ID
          example: "123456789"
        owner:
          type: object
          nullable: true
          description: Owner details when include_owner_details=true
          properties:
            user_id:
              type: string
            username:
              type: string
            display_name:
              type: string
            team_name:
              type: string
        players:
          type: array
          description: Players on this roster. When include_player_details=true, items include player_data.
          items:
            oneOf:
              - type: object
                properties:
                  player_id:
                    type: string
                  player_data:
                    oneOf:
                      - $ref: '#/components/schemas/Player'
                      - type: 'null'
              - type: string
        starters:
          type: array
          description: Starting lineup. Same typing as players.
          items:
            oneOf:
              - type: object
                properties:
                  player_id:
                    type: string
                  player_data:
                    oneOf:
                      - $ref: '#/components/schemas/Player'
                      - type: 'null'
              - type: string

    Matchup:
      type: object
      properties:
        matchup_id:
          type: integer
          description: Matchup ID
          example: 1
        week:
          type: integer
          description: Week number
          example: 5
        home_team:
          type: object
          description: Home team details
          properties:
            roster_id:
              type: integer
              example: 1
            owner_username:
              type: string
              example: "fantasyexpert"
            points:
              type: number
              example: 125.5
            projected_points:
              type: number
              example: 118.2
        away_team:
          type: object
          description: Away team details
          properties:
            roster_id:
              type: integer
              example: 2
            owner_username:
              type: string
              example: "rivalfan"
            points:
              type: number
              example: 110.8
            projected_points:
              type: number
              example: 122.1

  responses:
    ValidationError:
      description: Validation error in request parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Tool execution failed"
              message:
                type: string
                example: "Validation failed: The user_id field is required"
              mcp_error:
                type: object
                properties:
                  code:
                    type: integer
                    example: -32602
                  message:
                    type: string
                    example: "Invalid params"

    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal server error"
              message:
                type: string
                example: "An unexpected error occurred while processing the request"

tags:
  - name: Fantasy Sports
    description: Core fantasy sports data and analysis tools
  - name: Player Data
    description: Player statistics, rankings, and trending data
  - name: League Data
    description: League information, rosters, and participants
  - name: Roster Data
    description: Team rosters and player assignments
  - name: Matchup Data
    description: Weekly matchup results and projections
  - name: Draft Strategy
    description: Draft recommendations and strategy tools
